<apex:page controller="ServiceReportsController" sidebar="false" readOnly="true" cache="false" standardStylesheets="false" >  
  <html lang="en" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
      
      <apex:stylesheet value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/bootstrap/css/bootstrap.min.css')}"/>
      <link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet"/>
      <apex:stylesheet value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/bootstrap-datetimepicker-marlot/bootstrap-datetimepicker.min.css')}"/>
      <apex:stylesheet value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/jquery-date-range-picker/daterangepicker.css')}" />
      
      <!-- Lightning Styles -->
      <apex:stylesheet value="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/styles/salesforce-lightning-design-system.min.css')}"/>
      
      <style>
        slds-container--fluid, td {
          font: 100%/1.5 "Salesforce Sans", Arial, sans-serif !important; 
        }
          
        .loading-status {
          line-height: 32px;
        }
                    
        .loading-status:before { 
          content: " ";
          width: 30px;
          height: 60px;
          float: left;
          display: block;
          position: relative; 
          background: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/images/spinners/slds_spinner_brand.gif')}") top center no-repeat;
          background-size: 100%;
        }
          
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Light.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Light.woff')}") format("woff");
          font-weight: 300; }
        
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-LightItalic.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-LightItalic.woff')}") format("woff");
          font-style: italic;
          font-weight: 300; }
        
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Regular.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Regular.woff')}") format("woff");
          font-weight: 400; }
        
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Italic.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Italic.woff')}") format("woff");
          font-style: italic;
          font-weight: 400; }
        
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Bold.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-Bold.woff')}") format("woff");
          font-weight: 700; }
        
        @font-face {
          font-family: "Salesforce Sans";
          src: url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-BoldItalic.woff2')}") format("woff2"), url("{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/fonts/webfonts/SalesforceSans-BoldItalic.woff')}") format("woff");
          font-style: italic;
          font-weight: 700; } 
              
        html {
          font-size: initial; 
        }
        
        body {
          font-size: 75%; 
        }
          
        h1, .h1, h2, .h2, h3, .h3 {
          margin-top: initial;
          margin-bottom: initial;
        }
          
        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
          font-weight: bold; 
        }
          
        .pbTitle, .pbSubheader {
          display: none; 
        }
          
        .report-info {
          font-size: 14px; 
        }
          
        .filter-buttons h1{
          margin-left: 5px;
          font-size: 18px;
          font-weight: normal;
        }
          
        [id=*buttons-form] {
          width: 100%;
          margin-top: 5px;
          margin-bottom: 10px;
        }
          
        .filter-buttons {
          margin-bottom: 15px;
        }
          
        .nav-buttons form, .generate-container form {
          /*width: 50%;*/
          float: left;
          text-align: center
        }
          
        .loading-container {
          display: block;
          z-index: 9000;
          height: 90%;
          width: 99%;
          position: absolute;
          background: rgba(0,0,0,0.3);
        }
          
        .spinner {
          height: 60px;
          width: 60px;
          top: 50%;
          bottom: 0;
          left: 50%;
          right: 0;
          background-color: #fff;
          position: absolute;
          -webkit-animation: rotation .6s infinite linear;
          -moz-animation: rotation .6s infinite linear;
          -o-animation: rotation .6s infinite linear;
          animation: rotation .6s infinite linear;
          border-left: 6px solid rgba(0, 174, 239, .15);
          border-right: 6px solid rgba(0, 174, 239, .15);
          border-bottom: 6px solid rgba(0, 174, 239, .15);
          border-top: 6px solid rgba(0, 174, 239, .8);
          border-radius: 100%;
        }
        
        @-webkit-keyframes rotation {
          from {
            -webkit-transform: rotate(0deg);
          }
          to {
            -webkit-transform: rotate(359deg);
          }
        }
        
        @-moz-keyframes rotation {
          from {
            -moz-transform: rotate(0deg);
          }
          to {
            -moz-transform: rotate(359deg);
          }
        }
        
        @-o-keyframes rotation {
          from {
            -o-transform: rotate(0deg);
          }
          to {
            -o-transform: rotate(359deg);
          }
        }
        
        @keyframes rotation {
          from {
            transform: rotate(0deg);
          }
          to {
            transform: rotate(359deg);
          }
        }
          
        .button-offset {
          position: relative;
          top: -2px;
          z-index: 1;
        }
          
        .datepicker-from, .datepicker-to {
          cursor: pointer;
          position: relative;
          top: -2px;
        }
          
        .columnHeader, .columnHeader-sorted {
          padding-bottom: 10px !important;
          padding-top: 15px !important;
        }
          
        .columnHeader-sorted {
          padding-left: 20px !important;
        }
          
        .sortable-link {
          line-height: 0px;
        }
          
        .sortable-link.DESC:before {
          display: block;
          content: "▲";
          position: relative;
          left: -15px;
        }
          
        .sortable-link.ASC:before {
          display: block;
          content: "▼";
          position: relative;
          left: -15px;
        }
          
        .srtype-select {
          position: relative;
          top: -2px; 
          padding: 3px;
          min-height: 2rem !important;
          padding: 0;
          color: #333;
          font-weight: bold;
          font-size: .9em;
          border-radius: 3px;
          padding-left: 1rem !important;
          padding-right: 1rem !important;
          text-align: center;
          vertical-align: middle;
          border: 1px solid #d8dde6 !important;
          background: none !important;
          background-color: white !important;
          margin-right: 5px;
        }
          
        .slds-is-sortable .slds-button {
          visibility: visible;  
        }
          
        .svg-sort-header path {
          fill: #0070d2; 
        }
          
        a {
          color: #54698d !important;
          text-decoration: none !important;
        }
          
        a:hover {
          color: #0070d2 !important; 
        }
          
        select {
          -moz-appearance: none;
          text-indent: 0.01px;
          text-overflow: '';
        }
          
        @-moz-document url-prefix() {
          select {
            padding-top: 7px !important; 
            cursor: pointer;
          }
          
          select:hover {
            background-color: rgba(0, 0, 0, 0.1) !important;
          }
        }
          
        .btn, .btnDisabled {
          padding-left: 1rem !important;
          padding-right: 1rem !important;
          text-align: center;
          vertical-align: middle;
          border: 1px solid #d8dde6 !important;
          background: none !important;
          background-color: white !important; 
        }
          
        .btn.slds-button--brand, .btnDisabled.slds-button--brand {
          background-color: #0070d2 !important;
          border: 1px solid #0070d2 !important;
          color: white !important; 
        }
          
        .btn.slds-button--brand:hover, .btnDisabled.slds-button--brand:hover {
          background-color: #005fb2 !important; 
        }
          
        .btn.slds-button--small, .btnDisabled.slds-button--small {
          line-height: 1.875rem !important;
          min-height: 2rem !important; 
          padding: 0;
        }
      </style>
      <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/svg4everybody/2.0.0/svg4everybody.min.js"/>
      <script>
        $(document).ready(function() {
            //$(".datepicker-from").datepicker({ dateFormat: 'yy-mm-dd' }); 
            //$(".datepicker-to").datepicker({ dateFormat: 'yy-mm-dd' }); 
            
          $('.date').datetimepicker({
            minuteStep: 15,
            showInputs: false,
            disableFocus: true,
            showMeridian: true,
            defaultTime: '00:00'
          });
          $('.date').on('change', function(){
            $('.date').datetimepicker('hide');
          });  
        });
        
        $(window).load(function(){
          $(".loading-container").hide();
        });
          
        function startProcessing() {
          $(".loading-container").show();
        }
        
        function stopProcessing() {
          $(".loading-container").hide();  
        }
      </script>
        
      <div class="loading-container">
        <div class="spinner"></div>  
      </div>
      
      <div class="slds-container--fluid">
        <apex:sectionHeader subtitle="Report Generation for Service Requests" title="Service Requests"/>  
          
        <div class="buttons-container">
          <!-- Filter Buttons -->
          <apex:form >
            <apex:actionFunction name="picklistChanged" action="{!picklistChanged}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" onComplete="stopProcessing();"></apex:actionFunction>
            <apex:actionfunction name="closeSelectedCases" action="{!closeSelectedCases}" rerender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg,srSelectedPanel" oncomplete="stopProcessing();">
              <apex:param name="caseClosureComment" value="{!caseClosureComment}" assignto="{!caseClosureComment}" />
            </apex:actionfunction>
              
            <apex:outputPanel id="filter-buttons-dd" styleClass="filter-buttons slds-grid slds-wrap" layout="block">
              <!-- Servicing Agencies -->
              <apex:selectlist value="{!activeServicingAgency}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!agencyPicklistOptions}" />
              </apex:selectlist>  
              <!-- Service Types -->
              <apex:selectlist value="{!selectedType}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!serviceReportTypes}" />
              </apex:selectlist>  
              <!-- Wards -->
              <apex:selectlist value="{!selectedWard}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!wardPicklistOptions}" />
              </apex:selectlist>
              <!-- Owners -->
              <apex:selectlist value="{!selectedOwner}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!ownerPicklistOptions}" />
              </apex:selectlist>  
              <!-- SnowZone -->
              <apex:selectlist value="{!selectedSnowZone}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!snowZonePicklistOptions}" />
              </apex:selectlist>
              <!-- SnowRoute -->
              <apex:selectlist value="{!selectedSnowRoute}" multiselect="false" size="1" styleclass="srtype-select" onchange="startProcessing();picklistChanged();">
                <apex:selectoptions value="{!snowRoutePicklistOptions}" />
              </apex:selectlist>
            </apex:outputPanel>  
              
            <apex:outputPanel id="filter-buttons" styleClass="filter-buttons slds-grid slds-wrap" style="float: left;" layout="block">     
              <h3 style="margin-bottom: 10px;" class="slds-col slds-size--1-of-1">Filters: </h3>
              <!--
              <apex:commandButton styleClass="button-offset slds-button slds-button--neutral slds-button--small" action="{!allRequests}" title="All Requests" value="All Requests" disabled="{!IF(mode=='', true, false)}" reRender="srPanel,filter-buttons,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg"/> 
              <apex:commandButton styleClass="button-offset slds-button slds-button--neutral slds-button--small" action="{!openRequestsOnly}" title="Open Requests Only" value="Open Requests Only" disabled="{!IF(mode=='Open', true, false)}" reRender="srPanel,filter-buttons,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg"/> 
              <apex:commandButton styleClass="button-offset slds-button slds-button--neutral slds-button--small" action="{!closedRequestsOnly}" title="Closed Requests Only" value="Closed Requests Only" disabled="{!IF(mode=='Closed', true, false)}" reRender="srPanel,filter-buttons,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg"/> 
              -->
              <!--<apex:selectlist value="{!selectedStatus}" multiselect="true" size="6" styleclass="srtype-select" onchange="//startProcessing();picklistChanged();">
                <apex:selectoptions value="{!statusOptions}" />
              </apex:selectlist>-->
              <c:MultiselectPicklist leftlabel="Available Statuses"
                                     leftoption="{!statusOptions}"
                                     rightlabel="Selected Statuses"
                                     rightoption="{!selectedStatusesOptions}"
                                     size="7"
                                     width="150px"
                                     loadingjsfunctionname="startProcessing"
                                     addremoveonclickjsfunctionname="picklistChanged" />
            </apex:outputPanel>  
            
            <apex:outputPanel id="date-range-container" styleClass="filter-buttons slds-grid slds-wrap" style="float: left; position: relative; top: 32px;" layout="block">
              <h3 style="margin-bottom: 10px;" class="slds-col slds-size--1-of-1">Date and Time Range: </h3>
              <div class="date-range-container slds-col slds-size--1-of-1" style="display: inline-block;">
                <!--<div class="slds-form-element" style="float: left;">
                  <div class="slds-form-element__control">
                    <apex:inputText value="{!daterangeFrom}" style="margin-right: 5px; width: auto;" styleClass="datepicker-from date slds-input" html-readonly="true" html-placeholder="yyyy-mm-dd 00:00"/>
                  </div>
                </div>
                <h4 class="" style="float: left;margin-top: 10px;margin-left: 5px;">to</h4>
                <div class="slds-form-element" style="float: left;">
                  <div class="slds-form-element__control">
                    <apex:inputText value="{!daterangeTo}" style="margin-left: 10px;width: auto;" styleClass="datepicker-to date slds-input" html-readonly="true" html-placeholder="yyyy-mm-dd 00:00"/>      
                  </div>
                </div>-->

                <div class="slds-form-element" style="float: left;">
                  <div class="slds-form-element__control">
                    <apex:inputtext value="{!daterangeComplete}" style="margin-left: 10px;width: 250px;" styleclass="date-range-picker slds-input" />
                  </div>
                </div>

                <apex:commandbutton styleclass="button-offset slds-button slds-button--brand slds-button--small" action="{!reset}" title="Apply Date Range" value="Apply" rerender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" style="float: left; margin-left: 10px;" onclick="startProcessing();" oncomplete="stopProcessing();" /> 
                <apex:commandbutton styleclass="button-offset slds-button slds-button--brand slds-button--small" action="{!clearDates}" title="Clear Date Range" value="Clear" rerender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" style="float: left;" onclick="startProcessing();" onComplete="stopProcessing();"/>
              </div>  
              <script>
                   /*$('.date').datetimepicker({
                     minuteStep: 15,
                     showInputs: false,
                     disableFocus: true,
                     showMeridian: true,
                     defaultTime: '00:00'
                   });
                   $('.date').on('change', function(){
                     $('.date').datetimepicker('hide');
                   });*/

                   $('.date-range-picker').dateRangePicker({
                     endDate: moment(),
                     startOfWeek: 'sunday',
	                   separator : ' ~ ',
	                   format: 'YYYY-MM-DD HH:mm',
	                   autoClose: false,
	                   time: {
		                   enabled: true
	                   },
	                   defaultTime: moment().startOf('day').toDate(),
	                   defaultEndTime: moment().endOf('day').toDate()
                   });
                </script>
            </apex:outputPanel>
          </apex:form> 
          </div><!-- /End Filter Buttons -->  
          
          <div class="report-table-container" style="float: left;">
              
            <div class="slds-col slds-size--1-of-1">
              <apex:pageMessages id="notifications" />
            </div>
              
            <apex:outputPanel id="generate-container" styleClass="generate-container" style="margin-left: 15%;">
              <apex:form >
                <apex:commandbutton styleclass="slds-button--brand" action="{!generate}" disabled="{!limitReached}" title="Generate Reports" value="Generate Reports" style="font-size: 13px; padding: 8px;" />
                <button type="button" class="slds-button--brand" title="Close Selected Cases" style="font-size: 13px; padding: 8px; background: #0070d2; font-family: Arial,Helvetica,sans-serif;" onclick="startProcessing();promptForCaseComment()">Close Selected Cases</button>
                <!--<apex:commandbutton styleclass="slds-button--brand" action="{!closeSelectedCases}" title="Close Selected Cases" value="Close Selected Cases" style="font-size: 13px; padding: 8px;" onclick="if(!confirm('NOTE: If service requests are selected for closure please allow some time for your request to be processed.\n\n Are you sure you wish to close the selected cases?')){return false;}" />-->
              </apex:form>  
            </apex:outputPanel>
                
            <script>
              function promptForCaseComment() {
                // Prompt the user for a comment when closing the case.
                var comment = prompt('NOTE: If service requests are selected for closure please allow some time for your request to be processed.\n\n Are you sure you wish to close the selected cases?');
                // If the comment if not null.
                if (comment) {
                  // Send the comment to the close selected cases function for processing with the closure.
                  closeSelectedCases(comment);
                } else if (comment == '') {
                  alert('You must provide a comment to close the selected cases.');
                  stopProcessing();
                } else if (!comment) {
                  stopProcessing();
                }
                // TODO: Warn user that comments are required.
              }
            </script>

            <div class="slds-col slds-size--1-of-1" style="margin-bottom: 20px; margin-left: 20px; width: auto; float: left;">
              <p class="report-info">Please select up to <b>{!displayMaxReports}</b> Service Requests for report generation.</p>
              <p>You can sort by columns by simply clicking on their name. If you wish to reverse the sort then simply click on the name again.</p>  
            </div>  
              
            <apex:outputPanel id="nav-buttons" styleClass="nav-buttons slds-col slds-size--1-of-1" style="float: left;" layout="block">
              <apex:form style="width: 100%; margin-bottom: 10px;">
                <div style="float: left;">
                  <apex:commandButton action="{!Beginning}" title="Beginning" value="<<" disabled="{!disablePrevious}" reRender="srPanel,nav-buttons,generate-container,convertSvg" styleClass="slds-button slds-button--neutral slds-button--small"/>
                  <apex:commandButton action="{!Previous}" title="Previous" value="<" disabled="{!disablePrevious}" reRender="srPanel,nav-buttons,generate-container,convertSvg" styleClass="slds-button slds-button--neutral slds-button--small"/>        
                </div>
                <div style="float: right;">
                  <apex:commandButton action="{!Next}" title="Next" value=">" disabled="{!disableNext}" reRender="srPanel,nav-buttons,generate-container,convertSvg" styleClass="slds-button slds-button--neutral slds-button--small"/>
                  <apex:commandButton action="{!End}" title="End" value=">>" disabled="{!disableNext}" reRender="srPanel,nav-buttons,generate-container,convertSvg" styleClass="slds-button slds-button--neutral slds-button--small"/>        
                </div>  
              </apex:form>
            </apex:outputPanel>  
              
              
            <apex:form id="srReportForm" styleClass="slds-grid slds-wrap slds-size--1-of-1">
              <!-- Action Functions -->
              <apex:actionFunction name="srChecked" action="{!serviceRequestChecked}" reRender="notifications, generate-container, srSelectedPageBlockSection, srPanel, srSelectedPanel, convertSvg" oncomplete="stopProcessing();">
                <apex:param name="caseId" value=""/>
              </apex:actionFunction>
              <apex:actionFunction name="srCheckAll" action="{!serviceRequestCheckAll}" reRender="notifications, generate-container, srSelectedPageBlockSection, srPanel, srSelectedPanel, convertSvg" oncomplete="stopProcessing();"></apex:actionFunction>
                
              <!-- Available Service Requests -->
              <div class="slds-col slds-size--1-of-1">  
                <apex:outputPanel id="srPanel" layout="block">
                  <h2 class="report-info">Available Cases</h2>
                   
                  <div class="slds-scrollable--x">
                      <table class="slds-table slds-table--bordered">
                        <thead>
                          <tr class="slds-text-heading--label">
                            <th class="slds-row-select" scope="col">
                              <label class="slds-checkbox">
                                <apex:inputCheckbox onclick="startProcessing();srCheckAll()" value="{!checkAllEnabled}"/>
                                <span class="slds-checkbox--faux"></span>
                                <span class="slds-form-element__label slds-assistive-text">Select All</span>
                              </label>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Service_Request_Number__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Service Request Id</span>  
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Service_Request_Number__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Service_Request_Name__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Service Request Name</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Service_Request_Name__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="SR_Status__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Status</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'SR_Status__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="CreatedDate" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Opened Date</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'CreatedDate', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Last_Update_Date__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Last Update Date</span> 
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Last_Update_Date__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Owner.Name" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Owner</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Owner.Name', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Address__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Address</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Address__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="Ward__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Ward</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'Ward__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="SnowZone__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Snow Zone</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'SnowZone__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <apex:commandLink action="{!toggleSortOrder}" reRender="srPanel,filter-buttons-dd,date-range-container,nav-buttons,generate-container,convertSvg" >
                                <apex:param name="sortColumnName" value="SnowRoute__c" assignTo="{!sortColumnName}"/>
                                <apex:param name="sortCoulmnDirection" value="{!sortColumnDirection}" assignTo="{!sortColumnDirection}"/>
                                  
                                <span class="slds-truncate">Snow Area</span>
                                <apex:outputPanel rendered="{!IF(sortColumnName == 'SnowRoute__c', true, false)}">
                                  <button class="slds-button slds-button--icon-bare slds-button--icon-border-small" type="button" >
                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'LightningDesign/assets/icons/utility/'+svgSortImage+'.svg')}" styleClass="svg svg-sort-header"/>
                                  </button>
                                </apex:outputPanel>
                              </apex:commandLink>
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <apex:variable value="{!0}" var="counter"/>
                          <apex:repeat value="{!allCasesList}" var="wrapper">
                            <tr class="slds-hint-parent">
                              <td class="slds-row-select">
                                <label class="slds-checkbox" >
                                  <apex:inputCheckbox onclick="startProcessing();srChecked('{!wrapper.c.Id}')" value="{!wrapper.checked}"/>
                                  <span class="slds-checkbox--faux"></span>
                                  <span class="slds-form-element__label slds-assistive-text">Select Row</span>
                                </label>
                              </td>
                              <td data-label="service-request-id" class="slds-cell-wrap" role="row">
                                <a href="/{!wrapper.c.Id}" class="slds-truncate" target="_blank">{!wrapper.c.Service_Request_Number__c}</a>
                              </td>
                              <td data-label="service-request-name" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.Service_Request_Name__c}" />    
                              </td>
                              <td data-label="status" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.SR_Status__c}" />  
                              </td>
                              <td data-label="opened-date" class="slds-cell-wrap">
                                <c:FormatDateTime date_Timevalue="{!wrapper.c.CreatedDate}"/>
                              </td>
                              <td data-label="last-update-date" class="slds-cell-wrap">
                                <c:FormatDateTime date_Timevalue="{!wrapper.c.Last_Update_Date__c}"/>
                              </td>
                              <td data-label="owner" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.Owner.Name}" />  
                              </td>
                              <td data-label="address" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.Address__c}" />  
                              </td>
                              <td data-label="ward" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.Ward__c}" />
                              </td>
                              <td data-label="snow-zone" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.SnowZone__c}" />
                              </td>
                              <td data-label="snow-area" class="slds-cell-wrap">
                                <apex:outputText value="{!wrapper.c.SnowRoute__c}" />
                              </td>
                            </tr>
                            <apex:variable value="{!counter + 1}" var="counter"/>
                          </apex:repeat>
                          <tr>
                            <td colspan="11">Showing Page # {!pageNumber} of {!totalPages}</td>  
                          </tr>
                        </tbody>
                      </table>
                    </div>
                </apex:outputPanel>
              </div>
                
              <!-- Selected Cases Panel -->
              <div class="slds-col slds-size--1-of-1" style="margin-top: 25px;">
                <apex:outputPanel id="srSelectedPanel" >
                  <h2 class="report-info">Selected Cases</h2>
                   <div class="slds-scrollable--x">
                      <table class="slds-table slds-table--bordered">
                        <thead>
                          <tr class="slds-text-heading--label">
                            <th class="slds-row-select" scope="col">
                             
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Service Request Id</span>  
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Service Request Name</span>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Status</span>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Opened Date</span>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Last Update Date</span> 
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Owner</span>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Address</span>
                            </th>
                            <th class="slds-is-sortable" scope="col">
                              <span class="slds-truncate">Ward</span>
                            </th>
                          </tr>
                        </thead>
                        <tbody>
                          <apex:repeat value="{!allCasesSelected}" var="caseId">
                            <tr class="slds-hint-parent">
                              <td class="slds-row-select">
                                <label class="slds-checkbox" >
                                  <apex:inputCheckbox onclick="startProcessing();srChecked('{!allCasesSelected[caseId].c.Id}')" value="{!allCasesSelected[caseId].checked}"/>
                                  <span class="slds-checkbox--faux"></span>
                                  <span class="slds-form-element__label slds-assistive-text">De-Select Row</span>
                                </label>
                              </td>
                              <th data-label="service-request-id" role="row">
                                <a href="/{!allCasesSelected[caseId].c.Id}" class="slds-truncate" target="_blank">{!allCasesSelected[caseId].c.Service_Request_Number__c}</a>
                              </th>
                              <td data-label="service-request-name">
                                <apex:outputText value="{!allCasesSelected[caseId].c.Service_Request_Name__c}" />    
                              </td>
                              <td data-label="status">
                                <apex:outputText value="{!allCasesSelected[caseId].c.SR_Status__c}" />  
                              </td>
                              <td data-label="opened-date">
                                <c:FormatDateTime date_Timevalue="{!allCasesSelected[caseId].c.CreatedDate}"/>
                              </td>
                              <td data-label="last-update-date">
                                <c:FormatDateTime date_Timevalue="{!allCasesSelected[caseId].c.Last_Update_Date__c}"/>
                              </td>
                              <td data-label="owner">
                                <apex:outputText value="{!allCasesSelected[caseId].c.Owner.Name}" />  
                              </td>
                              <td data-label="address">
                                <apex:outputText value="{!allCasesSelected[caseId].c.Address__c}" />  
                              </td>
                              <td data-label="ward">
                                <apex:outputText value="{!allCasesSelected[caseId].c.Ward__c}" />
                              </td>
                            </tr>
                          </apex:repeat>
                        </tbody>
                      </table>
                    </div>
                </apex:outputPanel>
              </div>
            </apex:form>  
          </div><!-- /End Table Container -->
      </div><!-- /End Container -->
      
      <apex:outputPanel id="convertSvg">
      <script>
       /*
        * Replace all SVG images with inline SVG
        */
        var convertSVGtoInlineSVG = function() {
          jQuery('img.svg').each(function(){
            var $img = jQuery(this);
            var imgID = $img.attr('id');
            var imgClass = $img.attr('class');
            var imgURL = $img.attr('src');

            jQuery.get(imgURL, function(data) {
                // Get the SVG tag, ignore the rest
                var $svg = jQuery(data).find('svg');

                // Add replaced image's ID to the new SVG
                if(typeof imgID !== 'undefined') {
                    $svg = $svg.attr('id', imgID);
                }
                // Add replaced image's classes to the new SVG
                if(typeof imgClass !== 'undefined') {
                    $svg = $svg.attr('class', imgClass+' replaced-svg');
                }

                // Remove any invalid XML tags as per http://validator.w3.org
                $svg = $svg.removeAttr('xmlns:a');
                $svg = $svg.attr('height', '1.25rem');
                $svg = $svg.attr('width', '1.25rem');

                // Replace image with new SVG
                $img.replaceWith($svg);

            }, 'xml');
          });
        }
        convertSVGtoInlineSVG();
      </script>
      </apex:outputPanel>
      
      <apex:includeScript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/jquery-1.11.1.min.js')}"/>
      <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
      <apex:includeScript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/jquery-migrate-1.2.1.min.js')}"/>
      <apex:includeScript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/bootstrap/js/bootstrap.min.js')}"/>
      <apex:includeScript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/bootstrap-datetimepicker-marlot/bootstrap-datetimepicker.min.js')}"/>
      <apex:includescript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/moment/moment.min.js')}" />
      <apex:includescript value="{!URLFOR($Resource.OUC311, 'OUC311/assets/plugins/jquery-date-range-picker/jquery.daterangepicker.js')}" />
  </html>
</apex:page>